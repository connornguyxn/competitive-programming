{
	// Place your competitive-programming workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
    "Subtask Namespace": {
        "scope": "cpp",
        "prefix": "subtask",
        "body": [
            "///////////////////////////////////////////////////////////////////////////////",
            "namespace sub${0} {",
            "    ////////////////////////////////////////",
            "    ////////////////////////////////////////",
            "    void main() {",
            "        ",
            "    }",
            "    void run() {",
            "        main();",
            "        exit(0);",
            "    }",
            "}"
        ],
        "description": "Subtask namespace with main and run functions"
    },
    "Big section break": {
        "prefix": "bbreak",
        "body": [
            "////////////////////////////////////////////////////////////////////////////////"
        ],
        "description": "Big section break"
    },
    "Small section break": {
        "prefix": "sbreak",
        "body": [
            "////////////////////////////////////////"
        ],
        "description": "Small section break"
    },
}